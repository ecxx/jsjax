include #std:io
include #std:array

segmenttree = array()

print("output the size of the segmenttree > ")
size = readint()

loop = 0
while (loop < (4 * size + 5)) {
    segmenttree.push(0)
    loop += 1
}

update = fn {
    index = #0
    left = #1
    right = #2
    mid = (#1+#2)>>1
    point = #3
    value = #4
    if (left != right)
        if (point > mid) update(2*index+2, mid+1, right, point, value)
        else update(2*index+1, left, mid, point, value)
    else segmenttree.set(index, value)
    if (left != right) segmenttree.set(index, segmenttree.get(2*index+1) + segmenttree.get(2*index+2))
}

query = fn {
    index = #0
    left = #1
    right = #2
    mid = (#1+#2)>>1
    rangeleft = #3
    rangeright = #4

    if ((left == rangeleft) && (right == rangeright))
        output = segmenttree.get(index)
    else if (rangeleft > mid)
        output = query(2*index+2, mid+1, right, rangeleft, rangeright)
    else if (rangeleft <= mid)
        output = query(2*index+1, left, mid, rangeleft, rangeright)
    else
        output = query(2*index+1, left, mid, rangeleft, mi1) + query(2*index+2, mid+1, right, mid+1, rangeright)

    return output
}

Update = fn {
    print("in separate lines, index and value")
    i = readint()
    v = readint()
    update(0, 1, size, i, v)
}

Query = fn {
    print("in separate lines, left and right")
    l = readint()
    r = readint()
    return query(0, 1, size, l, r)
}

while (true) {
    print("0 for Update, 1 for Query. All other numbers to exit > ")
    op = readint()
    if (op==0) Update()
    else if (op==1) print(Query())
    else return 0
}